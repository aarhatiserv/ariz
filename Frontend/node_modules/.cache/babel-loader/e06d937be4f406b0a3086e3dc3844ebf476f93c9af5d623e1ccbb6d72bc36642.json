{"ast":null,"code":"import { jsx } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { asLinkAttrs } from './../_node_modules/@prismicio/client/dist/helpers/asLinkAttrs.js';\nimport \"@prismicio/richtext\";\nimport { devMsg } from \"../lib/devMsg.js\";\nimport { isInternalURL } from \"../lib/isInternalURL.js\";\nconst defaultComponent = \"a\";\nconst PrismicLink = React.forwardRef(function PrismicLink2(_ref, ref) {\n  let {\n    field,\n    document: doc,\n    linkResolver,\n    internalComponent,\n    externalComponent,\n    ...restProps\n  } = _ref;\n  if (typeof process !== \"undefined\" && process.env.NODE_ENV === \"development\") {\n    if (field) {\n      if (!field.link_type) {\n        console.error(`[PrismicLink] This \"field\" prop value caused an error to be thrown.\n`, field);\n        throw new Error(`[PrismicLink] The provided field is missing required properties to properly render a link. The link will not render. For more details, see ${devMsg(\"missing-link-properties\")}`);\n      } else if (Object.keys(field).length > 1 && !(\"url\" in field || \"uid\" in field || \"id\" in field)) {\n        console.warn(`[PrismicLink] The provided field is missing required properties to properly render a link. The link may not render correctly. For more details, see ${devMsg(\"missing-link-properties\")}`, field);\n      }\n    } else if (doc) {\n      if (!(\"url\" in doc || \"id\" in doc)) {\n        console.warn(`[PrismicLink] The provided document is missing required properties to properly render a link. The link may not render correctly. For more details, see ${devMsg(\"missing-link-properties\")}`, doc);\n      }\n    }\n  }\n  const {\n    href: computedHref,\n    rel: computedRel,\n    ...attrs\n  } = asLinkAttrs(field ?? doc, {\n    linkResolver,\n    rel: typeof restProps.rel === \"function\" ? restProps.rel : void 0\n  });\n  let rel = computedRel;\n  if (\"rel\" in restProps && typeof restProps.rel !== \"function\") {\n    rel = restProps.rel;\n  }\n  const href = (\"href\" in restProps ? restProps.href : computedHref) || \"\";\n  const InternalComponent = internalComponent || defaultComponent;\n  const ExternalComponent = externalComponent || defaultComponent;\n  const Component = href && isInternalURL(href) ? InternalComponent : ExternalComponent;\n  return /* @__PURE__ */jsx(Component, {\n    ref,\n    ...attrs,\n    ...restProps,\n    href,\n    rel\n  });\n});\nexport { PrismicLink, defaultComponent };","map":{"version":3,"names":["defaultComponent","PrismicLink","React","forwardRef","PrismicLink2","_ref","ref","field","document","doc","linkResolver","internalComponent","externalComponent","restProps","process","env","NODE_ENV","link_type","console","error","Error","devMsg","Object","keys","length","warn","href","computedHref","rel","computedRel","attrs","asLinkAttrs","InternalComponent","ExternalComponent","Component","isInternalURL","jsx"],"sources":["E:\\Aarhat Iserv - E-commerce\\new\\ariz-garments-mern\\ariz\\Frontend\\node_modules\\@prismicio\\src\\react-server\\PrismicLink.tsx"],"sourcesContent":["import * as React from \"react\";\nimport {\n\tLinkField,\n\tLinkResolverFunction,\n\tPrismicDocument,\n\tasLinkAttrs,\n\tAsLinkAttrsConfig,\n} from \"@prismicio/client\";\n\nimport { devMsg } from \"../lib/devMsg\";\nimport { isInternalURL } from \"../lib/isInternalURL\";\n\n/**\n * The default component rendered for internal and external links.\n */\nexport const defaultComponent = \"a\";\n\n/**\n * Props provided to a component when rendered with `<PrismicLink>`.\n */\nexport interface LinkProps {\n\t/**\n\t * The URL to link.\n\t */\n\thref: string;\n\n\t/**\n\t * The `target` attribute for anchor elements. If the Prismic field is\n\t * configured to open in a new window, this prop defaults to `_blank`.\n\t */\n\ttarget?: React.HTMLAttributeAnchorTarget;\n\n\t/**\n\t * The `rel` attribute for anchor elements. If the `target` prop is set to\n\t * `\"_blank\"`, this prop defaults to `\"noopener noreferrer\"`.\n\t */\n\trel?: string;\n\n\t/**\n\t * Children for the component. *\n\t */\n\tchildren?: React.ReactNode;\n}\n\nexport type PrismicLinkProps<\n\tInternalComponentProps = React.ComponentProps<typeof defaultComponent>,\n\tExternalComponentProps = React.ComponentProps<typeof defaultComponent>,\n> = Omit<InternalComponentProps & ExternalComponentProps, \"rel\" | \"href\"> & {\n\t/**\n\t * The `rel` attribute for the link. By default, `\"noreferrer\"` is provided if\n\t * the link's URL is external. This prop can be provided a function to use the\n\t * link's metadata to determine the `rel` value.\n\t */\n\trel?: string | AsLinkAttrsConfig[\"rel\"];\n\n\t/**\n\t * The Link Resolver used to resolve links.\n\t *\n\t * @remarks\n\t * If your app uses Route Resolvers when querying for your Prismic\n\t * repository's content, a Link Resolver does not need to be provided.\n\t * @see Learn about Link Resolvers and Route Resolvers {@link https://prismic.io/docs/core-concepts/link-resolver-route-resolver}\n\t */\n\tlinkResolver?: LinkResolverFunction;\n\n\t/**\n\t * The component rendered for internal URLs. Defaults to `<a>`.\n\t *\n\t * If your app uses a client-side router that requires a special Link\n\t * component, provide the Link component to this prop.\n\t */\n\tinternalComponent?: React.ElementType<InternalComponentProps>;\n\n\t/**\n\t * The component rendered for external URLs. Defaults to `<a>`.\n\t */\n\texternalComponent?: React.ComponentType<ExternalComponentProps>;\n} & (\n\t\t| {\n\t\t\t\tdocument: PrismicDocument | null | undefined;\n\t\t\t\thref?: never;\n\t\t\t\tfield?: never;\n\t\t  }\n\t\t| {\n\t\t\t\tfield: LinkField | null | undefined;\n\t\t\t\thref?: never;\n\t\t\t\tdocument?: never;\n\t\t  }\n\t\t| {\n\t\t\t\thref: LinkProps[\"href\"];\n\t\t\t\tfield?: LinkField | null | undefined;\n\t\t\t\tdocument?: never;\n\t\t  }\n\t);\n\nexport const PrismicLink = React.forwardRef(function PrismicLink<\n\tInternalComponentProps = React.ComponentProps<typeof defaultComponent>,\n\tExternalComponentProps = React.ComponentProps<typeof defaultComponent>,\n>(\n\t{\n\t\tfield,\n\t\tdocument: doc,\n\t\tlinkResolver,\n\t\tinternalComponent,\n\t\texternalComponent,\n\t\t...restProps\n\t}: PrismicLinkProps<InternalComponentProps, ExternalComponentProps>,\n\tref: React.ForwardedRef<Element>,\n): JSX.Element {\n\tif (\n\t\ttypeof process !== \"undefined\" &&\n\t\tprocess.env.NODE_ENV === \"development\"\n\t) {\n\t\tif (field) {\n\t\t\tif (!field.link_type) {\n\t\t\t\tconsole.error(\n\t\t\t\t\t`[PrismicLink] This \"field\" prop value caused an error to be thrown.\\n`,\n\t\t\t\t\tfield,\n\t\t\t\t);\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`[PrismicLink] The provided field is missing required properties to properly render a link. The link will not render. For more details, see ${devMsg(\n\t\t\t\t\t\t\"missing-link-properties\",\n\t\t\t\t\t)}`,\n\t\t\t\t);\n\t\t\t} else if (\n\t\t\t\tObject.keys(field).length > 1 &&\n\t\t\t\t!(\"url\" in field || \"uid\" in field || \"id\" in field)\n\t\t\t) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t`[PrismicLink] The provided field is missing required properties to properly render a link. The link may not render correctly. For more details, see ${devMsg(\n\t\t\t\t\t\t\"missing-link-properties\",\n\t\t\t\t\t)}`,\n\t\t\t\t\tfield,\n\t\t\t\t);\n\t\t\t}\n\t\t} else if (doc) {\n\t\t\tif (!(\"url\" in doc || \"id\" in doc)) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t`[PrismicLink] The provided document is missing required properties to properly render a link. The link may not render correctly. For more details, see ${devMsg(\n\t\t\t\t\t\t\"missing-link-properties\",\n\t\t\t\t\t)}`,\n\t\t\t\t\tdoc,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tconst {\n\t\thref: computedHref,\n\t\trel: computedRel,\n\t\t...attrs\n\t} = asLinkAttrs(field ?? doc, {\n\t\tlinkResolver,\n\t\trel: typeof restProps.rel === \"function\" ? restProps.rel : undefined,\n\t});\n\n\tlet rel: string | undefined = computedRel;\n\tif (\"rel\" in restProps && typeof restProps.rel !== \"function\") {\n\t\trel = restProps.rel;\n\t}\n\n\tconst href = (\"href\" in restProps ? restProps.href : computedHref) || \"\";\n\n\tconst InternalComponent = (internalComponent ||\n\t\tdefaultComponent) as React.ComponentType<LinkProps>;\n\tconst ExternalComponent = (externalComponent ||\n\t\tdefaultComponent) as React.ComponentType<LinkProps>;\n\tconst Component =\n\t\thref && isInternalURL(href) ? InternalComponent : ExternalComponent;\n\n\treturn (\n\t\t<Component ref={ref} {...attrs} {...restProps} href={href} rel={rel} />\n\t);\n}) as <\n\tInternalComponentProps = React.ComponentProps<typeof defaultComponent>,\n\tExternalComponentProps = React.ComponentProps<typeof defaultComponent>,\n>(\n\tprops: PrismicLinkProps<InternalComponentProps, ExternalComponentProps> & {\n\t\tref?: React.ForwardedRef<Element>;\n\t},\n) => JSX.Element;\n"],"mappings":";;;;;;AAeO,MAAMA,gBAAA,GAAmB;AAgFzB,MAAMC,WAAA,GAAcC,KAAA,CAAMC,UAAA,CAAW,SAASC,aAAAC,IAAA,EAYpDC,GAAA,EAAgC;EAAA,IARhC;IACCC,KAAA;IACAC,QAAA,EAAUC,GAAA;IACVC,YAAA;IACAC,iBAAA;IACAC,iBAAA;IACA,GAAGC;EAAA,IAAAR,IAAA;EAIJ,IACC,OAAOS,OAAA,KAAY,eACnBA,OAAA,CAAQC,GAAA,CAAIC,QAAA,KAAa,eACxB;IACD,IAAIT,KAAA,EAAO;MACN,KAACA,KAAA,CAAMU,SAAA,EAAW;QACrBC,OAAA,CAAQC,KAAA,CACP;AAAA,GACAZ,KAAK;QAEN,MAAM,IAAIa,KAAA,CACT,8IAA8IC,MAAA,CAC7I,yBAAyB,GACvB;MAGJ,WAAAC,MAAA,CAAOC,IAAA,CAAKhB,KAAK,EAAEiB,MAAA,GAAS,KAC5B,EAAE,SAASjB,KAAA,IAAS,SAASA,KAAA,IAAS,QAAQA,KAAA,GAC7C;QACDW,OAAA,CAAQO,IAAA,CACP,uJAAuJJ,MAAA,CACtJ,yBAAyB,KAE1Bd,KAAK;MAEN;IAAA,WACSE,GAAA,EAAK;MACf,IAAI,EAAE,SAASA,GAAA,IAAO,QAAQA,GAAA,GAAM;QACnCS,OAAA,CAAQO,IAAA,CACP,0JAA0JJ,MAAA,CACzJ,yBAAyB,KAE1BZ,GAAG;MAEJ;IACD;EACD;EAEK;IACLiB,IAAA,EAAMC,YAAA;IACNC,GAAA,EAAKC,WAAA;IACL,GAAGC;EAAA,IACAC,WAAA,CAAYxB,KAAA,IAASE,GAAA,EAAK;IAC7BC,YAAA;IACAkB,GAAA,EAAK,OAAOf,SAAA,CAAUe,GAAA,KAAQ,aAAaf,SAAA,CAAUe,GAAA,GAAM;EAAA,CAC3D;EAED,IAAIA,GAAA,GAA0BC,WAAA;EAC9B,IAAI,SAAShB,SAAA,IAAa,OAAOA,SAAA,CAAUe,GAAA,KAAQ,YAAY;IAC9DA,GAAA,GAAMf,SAAA,CAAUe,GAAA;EAChB;EAED,MAAMF,IAAA,IAAQ,UAAUb,SAAA,GAAYA,SAAA,CAAUa,IAAA,GAAOC,YAAA,KAAiB;EAEtE,MAAMK,iBAAA,GAAqBrB,iBAAA,IAC1BX,gBAAA;EACD,MAAMiC,iBAAA,GAAqBrB,iBAAA,IAC1BZ,gBAAA;EACD,MAAMkC,SAAA,GACLR,IAAA,IAAQS,aAAA,CAAcT,IAAI,IAAIM,iBAAA,GAAoBC,iBAAA;EAGlD,sBAAAG,GAAA,CAACF,SAAA;IAAU5B,GAAA;IAAc,GAAAwB,KAAA;IAAO,GAAIjB,SAAA;IAAWa,IAAA;IAAYE;EAAS;AAEtE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}