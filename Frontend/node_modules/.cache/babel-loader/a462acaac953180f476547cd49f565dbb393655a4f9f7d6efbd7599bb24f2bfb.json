{"ast":null,"code":"const isInternalURL = url => {\n  const isInternal = /^(\\/(?!\\/)|#)/.test(url);\n  const isSpecialLink = !isInternal && !/^https?:\\/\\//.test(url);\n  return isInternal && !isSpecialLink;\n};\nexport { isInternalURL };","map":{"version":3,"names":["isInternalURL","url","isInternal","test","isSpecialLink"],"sources":["E:\\Aarhat Iserv - E-commerce\\new\\ariz\\Frontend\\node_modules\\@prismicio\\src\\lib\\isInternalURL.ts"],"sourcesContent":["/**\n * Determines if a URL is internal or external.\n *\n * @param url - The URL to check if internal or external.\n *\n * @returns `true` if `url` is internal, `false` otherwise.\n */\n// TODO: This does not detect all relative URLs as internal such as `about` or `./about`. This function assumes relative URLs start with a \"/\" or \"#\"`.\nexport const isInternalURL = (url: string): boolean => {\n\tconst isInternal = /^(\\/(?!\\/)|#)/.test(url);\n\tconst isSpecialLink = !isInternal && !/^https?:\\/\\//.test(url);\n\n\treturn isInternal && !isSpecialLink;\n};\n"],"mappings":"AAQa,MAAAA,aAAA,GAAiBC,GAAA,IAAwB;EAC/C,MAAAC,UAAA,GAAa,gBAAgBC,IAAA,CAAKF,GAAG;EAC3C,MAAMG,aAAA,GAAgB,CAACF,UAAA,IAAc,CAAC,eAAeC,IAAA,CAAKF,GAAG;EAE7D,OAAOC,UAAA,IAAc,CAACE,aAAA;AACvB"},"metadata":{},"sourceType":"module","externalDependencies":[]}