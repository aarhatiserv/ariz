{"ast":null,"code":"import { isInternalURL } from \"../lib/isInternalURL.js\";\nimport { asLink } from \"./asLink.js\";\nimport { link } from \"./isFilled.js\";\nvar asLinkAttrs = function asLinkAttrs(linkFieldOrDocument) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (linkFieldOrDocument && (\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore - Bug in TypeScript 4.9: https://github.com/microsoft/TypeScript/issues/51501\n  \"link_type\" in linkFieldOrDocument ? link(linkFieldOrDocument) : linkFieldOrDocument)) {\n    var target =\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore - Bug in TypeScript 4.9: https://github.com/microsoft/TypeScript/issues/51501\n    \"target\" in linkFieldOrDocument ? linkFieldOrDocument.target : void 0;\n    var rawHref = asLink(linkFieldOrDocument, config.linkResolver);\n    var href = rawHref == null ? void 0 : rawHref;\n    var isExternal = typeof href === \"string\" ? !isInternalURL(href) : false;\n    var rel = config.rel ? config.rel({\n      href: href,\n      isExternal: isExternal,\n      target: target\n    }) : isExternal ? \"noreferrer\" : void 0;\n    return {\n      href: href,\n      target: target,\n      rel: rel == null ? void 0 : rel\n    };\n  }\n  return {};\n};\nexport { asLinkAttrs };","map":{"version":3,"names":["asLinkAttrs","linkFieldOrDocument","config","arguments","length","undefined","link","target","rawHref","asLink","linkResolver","href","isExternal","isInternalURL","rel"],"sources":["E:\\Aarhat Iserv - E-commerce\\new\\ariz\\Frontend\\node_modules\\@prismicio\\src\\helpers\\asLinkAttrs.ts"],"sourcesContent":["import { isInternalURL } from \"../lib/isInternalURL\";\n\nimport type { FilledContentRelationshipField } from \"../types/value/contentRelationship\";\nimport type { PrismicDocument } from \"../types/value/document\";\nimport { FilledLinkToWebField, LinkField } from \"../types/value/link\";\nimport type { FilledLinkToMediaField } from \"../types/value/linkToMedia\";\n\nimport { AsLinkReturnType, LinkResolverFunction, asLink } from \"./asLink\";\nimport { link as isFilledLink } from \"./isFilled\";\n\ntype AsLinkAttrsConfigRelArgs<\n\tLinkResolverFunctionReturnType = ReturnType<LinkResolverFunction>,\n\tField extends LinkField | PrismicDocument | null | undefined =\n\t\t| LinkField\n\t\t| PrismicDocument\n\t\t| null\n\t\t| undefined,\n> = {\n\thref:\n\t\t| NonNullable<AsLinkReturnType<LinkResolverFunctionReturnType, Field>>\n\t\t| undefined;\n\tisExternal: boolean;\n\ttarget?: string;\n};\n\nexport type AsLinkAttrsConfig<\n\tLinkResolverFunctionReturnType = ReturnType<LinkResolverFunction>,\n\tField extends LinkField | PrismicDocument | null | undefined =\n\t\t| LinkField\n\t\t| PrismicDocument\n\t\t| null\n\t\t| undefined,\n> = {\n\tlinkResolver?: LinkResolverFunction<LinkResolverFunctionReturnType>;\n\trel?: (\n\t\targs: AsLinkAttrsConfigRelArgs<LinkResolverFunctionReturnType, Field>,\n\t) => string | undefined | void;\n};\n\n/**\n * The return type of `asLinkAttrs()`.\n */\ntype AsLinkAttrsReturnType<\n\tLinkResolverFunctionReturnType = ReturnType<LinkResolverFunction>,\n\tField extends LinkField | PrismicDocument | null | undefined =\n\t\t| LinkField\n\t\t| PrismicDocument\n\t\t| null\n\t\t| undefined,\n> = Field extends\n\t| FilledLinkToWebField\n\t| FilledLinkToMediaField\n\t| FilledContentRelationshipField\n\t| PrismicDocument\n\t? {\n\t\t\thref:\n\t\t\t\t| NonNullable<AsLinkReturnType<LinkResolverFunctionReturnType, Field>>\n\t\t\t\t| undefined;\n\t\t\ttarget?: string;\n\t\t\trel?: string;\n\t  }\n\t: {\n\t\t\thref?: undefined;\n\t\t\ttarget?: undefined;\n\t\t\trel?: undefined;\n\t  };\n\n/**\n * Resolves any type of link field or Prismic document to a set of link\n * attributes. The attributes are designed to be passed to link HTML elements,\n * like `<a>`.\n *\n * If a resolved URL is external (i.e. starts with a protocol like `https://`),\n * `rel` is returned as `\"noreferrer\"`.\n *\n * @typeParam LinkResolverFunctionReturnType - link resolver function return\n *   type\n * @typeParam Field - Link field or Prismic document to resolve to link\n *   attributes\n * @param linkFieldOrDocument - Any kind of link field or a document to resolve\n * @param config - Configuration that determines the output of `asLinkAttrs()`\n *\n * @returns Resolved set of link attributes or, if the provided link field or\n *   document is empty, and empty object\n * @see Prismic link resolver documentation: {@link https://prismic.io/docs/route-resolver#link-resolver}\n * @see Prismic API `routes` options documentation: {@link https://prismic.io/docs/route-resolver}\n */\nexport const asLinkAttrs = <\n\tLinkResolverFunctionReturnType = ReturnType<LinkResolverFunction>,\n\tField extends LinkField | PrismicDocument | null | undefined =\n\t\t| LinkField\n\t\t| PrismicDocument\n\t\t| null\n\t\t| undefined,\n>(\n\tlinkFieldOrDocument: Field,\n\tconfig: AsLinkAttrsConfig<LinkResolverFunctionReturnType> = {},\n): AsLinkAttrsReturnType<LinkResolverFunctionReturnType> => {\n\tif (\n\t\tlinkFieldOrDocument &&\n\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t// @ts-ignore - Bug in TypeScript 4.9: https://github.com/microsoft/TypeScript/issues/51501\n\t\t(\"link_type\" in linkFieldOrDocument\n\t\t\t? isFilledLink(linkFieldOrDocument)\n\t\t\t: linkFieldOrDocument)\n\t) {\n\t\tconst target =\n\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t// @ts-ignore - Bug in TypeScript 4.9: https://github.com/microsoft/TypeScript/issues/51501\n\t\t\t\"target\" in linkFieldOrDocument ? linkFieldOrDocument.target : undefined;\n\n\t\tconst rawHref = asLink(linkFieldOrDocument, config.linkResolver);\n\t\tconst href =\n\t\t\trawHref == null ? undefined : (rawHref as NonNullable<typeof rawHref>);\n\n\t\tconst isExternal = typeof href === \"string\" ? !isInternalURL(href) : false;\n\n\t\tconst rel = config.rel\n\t\t\t? config.rel({ href, isExternal, target })\n\t\t\t: isExternal\n\t\t\t? \"noreferrer\"\n\t\t\t: undefined;\n\n\t\treturn {\n\t\t\thref,\n\t\t\ttarget,\n\t\t\trel: rel == null ? undefined : rel,\n\t\t};\n\t}\n\n\treturn {};\n};\n"],"mappings":";;;AAuFO,IAAMA,WAAA,GAAc,SAAdA,YAQZC,mBAAA,EAE0D;EAAA,IAD1DC,MAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAA4D;EAG3D,IAAAF,mBAAA;EAAA;EAAA;EAGC,eAAeA,mBAAA,GACbK,IAAA,CAAaL,mBAAmB,IAChCA,mBAAA,GACF;IACK,IAAAM,MAAA;IAAA;IAAA;IAGL,YAAYN,mBAAA,GAAsBA,mBAAA,CAAoBM,MAAA,GAAS;IAEhE,IAAMC,OAAA,GAAUC,MAAA,CAAOR,mBAAA,EAAqBC,MAAA,CAAOQ,YAAY;IACzD,IAAAC,IAAA,GACLH,OAAA,IAAW,OAAO,SAAaA,OAAA;IAEhC,IAAMI,UAAA,GAAa,OAAOD,IAAA,KAAS,WAAW,CAACE,aAAA,CAAcF,IAAI,IAAI;IAErE,IAAMG,GAAA,GAAMZ,MAAA,CAAOY,GAAA,GAChBZ,MAAA,CAAOY,GAAA,CAAI;MAAEH,IAAA,EAAAA,IAAA;MAAMC,UAAA,EAAAA,UAAA;MAAYL,MAAA,EAAAA;IAAM,CAAE,IACvCK,UAAA,GACA,eACA;IAEI;MACND,IAAA,EAAAA,IAAA;MACAJ,MAAA,EAAAA,MAAA;MACAO,GAAA,EAAKA,GAAA,IAAO,OAAO,SAAYA;IAAA;EAEhC;EAED,OAAO;AACR"},"metadata":{},"sourceType":"module","externalDependencies":[]}