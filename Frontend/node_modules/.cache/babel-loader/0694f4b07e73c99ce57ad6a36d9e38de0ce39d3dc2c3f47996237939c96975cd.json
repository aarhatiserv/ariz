{"ast":null,"code":"import { LinkType } from \"../types/value/link.js\";\nimport { documentToLinkField } from \"./documentToLinkField.js\";\nconst asLink = function (linkFieldOrDocument) {\n  if (!linkFieldOrDocument) {\n    return null;\n  }\n  const linkField =\n  // prettier-ignore\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore - Bug in TypeScript 4.9: https://github.com/microsoft/TypeScript/issues/51501\n  // TODO: Remove the `prettier-ignore` comment when this bug is fixed.\n  \"link_type\" in linkFieldOrDocument ? linkFieldOrDocument : documentToLinkField(linkFieldOrDocument);\n  for (var _len = arguments.length, configObjectOrTuple = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    configObjectOrTuple[_key - 1] = arguments[_key];\n  }\n  const [configObjectOrLinkResolver] = configObjectOrTuple;\n  let config;\n  if (typeof configObjectOrLinkResolver === \"function\" || configObjectOrLinkResolver == null) {\n    config = {\n      linkResolver: configObjectOrLinkResolver\n    };\n  } else {\n    config = {\n      ...configObjectOrLinkResolver\n    };\n  }\n  switch (linkField.link_type) {\n    case LinkType.Media:\n    case LinkType.Web:\n      return \"url\" in linkField ? linkField.url : null;\n    case LinkType.Document:\n      {\n        if (\"id\" in linkField && config.linkResolver) {\n          const resolvedURL = config.linkResolver(linkField);\n          if (resolvedURL != null) {\n            return resolvedURL;\n          }\n        }\n        if (\"url\" in linkField && linkField.url) {\n          return linkField.url;\n        }\n        return null;\n      }\n    case LinkType.Any:\n    default:\n      return null;\n  }\n};\nexport { asLink };","map":{"version":3,"names":["asLink","linkFieldOrDocument","linkField","documentToLinkField","_len","arguments","length","configObjectOrTuple","Array","_key","configObjectOrLinkResolver","config","linkResolver","link_type","LinkType","Media","Web","url","Document","resolvedURL","Any"],"sources":["E:\\Aarhat Iserv - E-commerce\\new\\ariz-garments-mern\\ariz\\Frontend\\node_modules\\@prismicio\\src\\helpers\\asLink.ts"],"sourcesContent":["import type { FilledContentRelationshipField } from \"../types/value/contentRelationship\";\nimport type { PrismicDocument } from \"../types/value/document\";\nimport { FilledLinkToWebField, LinkField, LinkType } from \"../types/value/link\";\nimport type { FilledLinkToMediaField } from \"../types/value/linkToMedia\";\n\nimport { documentToLinkField } from \"./documentToLinkField\";\n\n/**\n * Resolves a link to a Prismic document to a URL\n *\n * @typeParam ReturnType - Return type of your link resolver function, useful if\n *   you prefer to return a complex object\n * @param linkToDocumentField - A document link field to resolve\n *\n * @returns Resolved URL\n *\n * @see Prismic link resolver documentation: {@link https://prismic.io/docs/route-resolver#link-resolver}\n */\nexport type LinkResolverFunction<ReturnType = string | null | undefined> = (\n\tlinkToDocumentField: FilledContentRelationshipField,\n) => ReturnType;\n\n/**\n * Configuration that determines the output of `asLink()`.\n */\ntype AsLinkConfig<LinkResolverFunctionReturnType = string | null | undefined> =\n\t{\n\t\t/**\n\t\t * An optional link resolver function. Without it, you are expected to use\n\t\t * the `routes` options from the API.\n\t\t */\n\t\tlinkResolver?: LinkResolverFunction<LinkResolverFunctionReturnType> | null;\n\t};\n\n// TODO: Remove when we remove support for deprecated tuple-style configuration.\n/**\n * @deprecated Use object-style configuration instead.\n */\ntype AsLinkDeprecatedTupleConfig<\n\tLinkResolverFunctionReturnType = string | null | undefined,\n> = [\n\tlinkResolver?: LinkResolverFunction<LinkResolverFunctionReturnType> | null,\n];\n\n/**\n * The return type of `asLink()`.\n */\nexport type AsLinkReturnType<\n\tLinkResolverFunctionReturnType = string | null | undefined,\n\tField extends LinkField | PrismicDocument | null | undefined =\n\t\t| LinkField\n\t\t| PrismicDocument\n\t\t| null\n\t\t| undefined,\n> = Field extends\n\t| FilledLinkToWebField\n\t| FilledLinkToMediaField\n\t| FilledContentRelationshipField\n\t| PrismicDocument\n\t? LinkResolverFunctionReturnType | string | null\n\t: null;\n\n// TODO: Remove overload when we remove support for deprecated tuple-style configuration.\nexport const asLink: {\n\t/**\n\t * Resolves any type of link field or Prismic document to a URL.\n\t *\n\t * @typeParam LinkResolverFunctionReturnType - link resolver function return\n\t *   type\n\t * @typeParam Field - Link field or Prismic document to resolve to a URL\n\t *\n\t * @param linkFieldOrDocument - Any kind of link field or a document to\n\t *   resolve\n\t * @param config - Configuration that determines the output of `asLink()`\n\t *\n\t * @returns Resolved URL or, if the provided link field or document is empty,\n\t *   `null`\n\t * @see Prismic link resolver documentation: {@link https://prismic.io/docs/route-resolver#link-resolver}\n\t * @see Prismic API `routes` options documentation: {@link https://prismic.io/docs/route-resolver}\n\t */\n\t<\n\t\tLinkResolverFunctionReturnType = string | null | undefined,\n\t\tField extends LinkField | PrismicDocument | null | undefined =\n\t\t\t| LinkField\n\t\t\t| PrismicDocument\n\t\t\t| null\n\t\t\t| undefined,\n\t>(\n\t\tlinkFieldOrDocument: Field,\n\t\tconfig?: AsLinkConfig<LinkResolverFunctionReturnType>,\n\t): AsLinkReturnType<LinkResolverFunctionReturnType, Field>;\n\n\t/**\n\t * Resolves any type of link field or Prismic document to a URL.\n\t *\n\t * @deprecated Use object-style configuration instead.\n\t *\n\t *   ```ts\n\t *   asLink(field);\n\t *   asLink(field, { linkResolver });\n\t *   ```\n\t * @typeParam LinkResolverFunctionReturnType - link resolver function return\n\t *   type\n\t * @typeParam Field - Link field or Prismic document to resolve to a URL\n\t *\n\t * @param linkFieldOrDocument - Any kind of link field or a document to\n\t *   resolve\n\t * @param linkResolver - An optional link resolver function. Without it, you\n\t *   are expected to use the `routes` options from the API\n\t *\n\t * @returns Resolved URL or, if the provided link field or document is empty,\n\t *   `null`\n\t * @see Prismic link resolver documentation: {@link https://prismic.io/docs/route-resolver#link-resolver}\n\t * @see Prismic API `routes` options documentation: {@link https://prismic.io/docs/route-resolver}\n\t */\n\t<\n\t\tLinkResolverFunctionReturnType = string | null | undefined,\n\t\tField extends LinkField | PrismicDocument | null | undefined =\n\t\t\t| LinkField\n\t\t\t| PrismicDocument\n\t\t\t| null\n\t\t\t| undefined,\n\t>(\n\t\tlinkFieldOrDocument: Field,\n\t\t...config: AsLinkDeprecatedTupleConfig<LinkResolverFunctionReturnType>\n\t): AsLinkReturnType<LinkResolverFunctionReturnType, Field>;\n} = <\n\tLinkResolverFunctionReturnType = string | null | undefined,\n\tField extends LinkField | PrismicDocument | null | undefined =\n\t\t| LinkField\n\t\t| PrismicDocument\n\t\t| null\n\t\t| undefined,\n>(\n\tlinkFieldOrDocument: Field,\n\t// TODO: Rename to `config` when we remove support for deprecated tuple-style configuration.\n\t...configObjectOrTuple:\n\t\t| [config?: AsLinkConfig<LinkResolverFunctionReturnType>]\n\t\t| AsLinkDeprecatedTupleConfig<LinkResolverFunctionReturnType>\n): AsLinkReturnType<LinkResolverFunctionReturnType, Field> => {\n\tif (!linkFieldOrDocument) {\n\t\treturn null as AsLinkReturnType<LinkResolverFunctionReturnType, Field>;\n\t}\n\n\t// Converts document to link field if needed\n\tconst linkField =\n\t\t// prettier-ignore\n\t\t(\n\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t// @ts-ignore - Bug in TypeScript 4.9: https://github.com/microsoft/TypeScript/issues/51501\n\t\t\t// TODO: Remove the `prettier-ignore` comment when this bug is fixed.\n\t\t\t\"link_type\" in linkFieldOrDocument\n\t\t\t\t? linkFieldOrDocument\n\t\t\t\t: documentToLinkField(linkFieldOrDocument)\n\t\t) as LinkField;\n\n\t// TODO: Remove when we remove support for deprecated tuple-style configuration.\n\tconst [configObjectOrLinkResolver] = configObjectOrTuple;\n\tlet config: AsLinkConfig<LinkResolverFunctionReturnType>;\n\tif (\n\t\ttypeof configObjectOrLinkResolver === \"function\" ||\n\t\tconfigObjectOrLinkResolver == null\n\t) {\n\t\tconfig = {\n\t\t\tlinkResolver: configObjectOrLinkResolver,\n\t\t};\n\t} else {\n\t\tconfig = { ...configObjectOrLinkResolver };\n\t}\n\n\tswitch (linkField.link_type) {\n\t\tcase LinkType.Media:\n\t\tcase LinkType.Web:\n\t\t\treturn (\"url\" in linkField ? linkField.url : null) as AsLinkReturnType<\n\t\t\t\tLinkResolverFunctionReturnType,\n\t\t\t\tField\n\t\t\t>;\n\n\t\tcase LinkType.Document: {\n\t\t\tif (\"id\" in linkField && config.linkResolver) {\n\t\t\t\t// When using link resolver...\n\t\t\t\tconst resolvedURL = config.linkResolver(linkField);\n\n\t\t\t\tif (resolvedURL != null) {\n\t\t\t\t\treturn resolvedURL as AsLinkReturnType<\n\t\t\t\t\t\tLinkResolverFunctionReturnType,\n\t\t\t\t\t\tField\n\t\t\t\t\t>;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (\"url\" in linkField && linkField.url) {\n\t\t\t\t// When using route resolver...\n\t\t\t\treturn linkField.url as AsLinkReturnType<\n\t\t\t\t\tLinkResolverFunctionReturnType,\n\t\t\t\t\tField\n\t\t\t\t>;\n\t\t\t}\n\n\t\t\t// When empty or link resolver and route resolver are not used...\n\t\t\treturn null as AsLinkReturnType<LinkResolverFunctionReturnType, Field>;\n\t\t}\n\n\t\tcase LinkType.Any:\n\t\tdefault:\n\t\t\treturn null as AsLinkReturnType<LinkResolverFunctionReturnType, Field>;\n\t}\n};\n"],"mappings":";;AA+Da,MAAAA,MAAA,GA+DT,SAAAA,CAQHC,mBAAA,EAK4D;EAC5D,IAAI,CAACA,mBAAA,EAAqB;IAClB;EACP;EAGK,MAAAC,SAAA;EAAA;EAAA;EAAA;EAAA;EAMJ,eAAeD,mBAAA,GACZA,mBAAA,GACAE,mBAAA,CAAoBF,mBAAmB;EAAA,SAAAG,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAjBzCC,mBAAA,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAAAF,mBAAA,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;EAAA;EAqBG,OAACC,0BAA0B,IAAIH,mBAAA;EACjC,IAAAI,MAAA;EACJ,IACC,OAAOD,0BAAA,KAA+B,cACtCA,0BAAA,IAA8B,MAC7B;IACQC,MAAA;MACRC,YAAA,EAAcF;IAAA;EAAA,OAET;IACGC,MAAA;MAAE,GAAGD;IAAA;EACd;EAED,QAAQR,SAAA,CAAUW,SAAA;IACjB,KAAKC,QAAA,CAASC,KAAA;IACd,KAAKD,QAAA,CAASE,GAAA;MACL,gBAASd,SAAA,GAAYA,SAAA,CAAUe,GAAA,GAAM;IAK9C,KAAKH,QAAA,CAASI,QAAA;MAAU;QACnB,YAAQhB,SAAA,IAAaS,MAAA,CAAOC,YAAA,EAAc;UAEvC,MAAAO,WAAA,GAAcR,MAAA,CAAOC,YAAA,CAAaV,SAAS;UAEjD,IAAIiB,WAAA,IAAe,MAAM;YACjB,OAAAA,WAAA;UAIP;QACD;QAEG,aAASjB,SAAA,IAAaA,SAAA,CAAUe,GAAA,EAAK;UAExC,OAAOf,SAAA,CAAUe,GAAA;QAIjB;QAGM;MACP;IAED,KAAKH,QAAA,CAASM,GAAA;IACd;MACQ;EACR;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}