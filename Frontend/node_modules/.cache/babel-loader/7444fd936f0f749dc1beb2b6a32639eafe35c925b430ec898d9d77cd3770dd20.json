{"ast":null,"code":"import _objectSpread from \"E:/Aarhat Iserv - E-commerce/new/ariz/Frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"E:/Aarhat Iserv - E-commerce/new/ariz/Frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"field\", \"document\", \"linkResolver\", \"internalComponent\", \"externalComponent\"],\n  _excluded2 = [\"href\", \"rel\"];\nimport { jsx } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { asLinkAttrs } from './../_node_modules/@prismicio/client/dist/helpers/asLinkAttrs.js';\nimport \"@prismicio/richtext\";\nimport { devMsg } from \"../lib/devMsg.js\";\nimport { isInternalURL } from \"../lib/isInternalURL.js\";\nvar defaultComponent = \"a\";\nvar PrismicLink = React.forwardRef(function PrismicLink2(_ref, ref) {\n  var field = _ref.field,\n    doc = _ref.document,\n    linkResolver = _ref.linkResolver,\n    internalComponent = _ref.internalComponent,\n    externalComponent = _ref.externalComponent,\n    restProps = _objectWithoutProperties(_ref, _excluded);\n  if (typeof process !== \"undefined\" && process.env.NODE_ENV === \"development\") {\n    if (field) {\n      if (!field.link_type) {\n        console.error(\"[PrismicLink] This \\\"field\\\" prop value caused an error to be thrown.\\n\", field);\n        throw new Error(\"[PrismicLink] The provided field is missing required properties to properly render a link. The link will not render. For more details, see \".concat(devMsg(\"missing-link-properties\")));\n      } else if (Object.keys(field).length > 1 && !(\"url\" in field || \"uid\" in field || \"id\" in field)) {\n        console.warn(\"[PrismicLink] The provided field is missing required properties to properly render a link. The link may not render correctly. For more details, see \".concat(devMsg(\"missing-link-properties\")), field);\n      }\n    } else if (doc) {\n      if (!(\"url\" in doc || \"id\" in doc)) {\n        console.warn(\"[PrismicLink] The provided document is missing required properties to properly render a link. The link may not render correctly. For more details, see \".concat(devMsg(\"missing-link-properties\")), doc);\n      }\n    }\n  }\n  var _asLinkAttrs = asLinkAttrs(field !== null && field !== void 0 ? field : doc, {\n      linkResolver: linkResolver,\n      rel: typeof restProps.rel === \"function\" ? restProps.rel : void 0\n    }),\n    computedHref = _asLinkAttrs.href,\n    computedRel = _asLinkAttrs.rel,\n    attrs = _objectWithoutProperties(_asLinkAttrs, _excluded2);\n  var rel = computedRel;\n  if (\"rel\" in restProps && typeof restProps.rel !== \"function\") {\n    rel = restProps.rel;\n  }\n  var href = (\"href\" in restProps ? restProps.href : computedHref) || \"\";\n  var InternalComponent = internalComponent || defaultComponent;\n  var ExternalComponent = externalComponent || defaultComponent;\n  var Component = href && isInternalURL(href) ? InternalComponent : ExternalComponent;\n  return /* @__PURE__ */jsx(Component, _objectSpread(_objectSpread(_objectSpread({\n    ref: ref\n  }, attrs), restProps), {}, {\n    href: href,\n    rel: rel\n  }));\n});\nexport { PrismicLink, defaultComponent };","map":{"version":3,"names":["defaultComponent","PrismicLink","React","forwardRef","PrismicLink2","_ref","ref","field","doc","document","linkResolver","internalComponent","externalComponent","restProps","_objectWithoutProperties","_excluded","process","env","NODE_ENV","link_type","console","error","Error","concat","devMsg","Object","keys","length","warn","_asLinkAttrs","asLinkAttrs","rel","computedHref","href","computedRel","attrs","_excluded2","InternalComponent","ExternalComponent","Component","isInternalURL","jsx","_objectSpread"],"sources":["E:\\Aarhat Iserv - E-commerce\\new\\ariz\\Frontend\\node_modules\\@prismicio\\src\\react-server\\PrismicLink.tsx"],"sourcesContent":["import * as React from \"react\";\nimport {\n\tLinkField,\n\tLinkResolverFunction,\n\tPrismicDocument,\n\tasLinkAttrs,\n\tAsLinkAttrsConfig,\n} from \"@prismicio/client\";\n\nimport { devMsg } from \"../lib/devMsg\";\nimport { isInternalURL } from \"../lib/isInternalURL\";\n\n/**\n * The default component rendered for internal and external links.\n */\nexport const defaultComponent = \"a\";\n\n/**\n * Props provided to a component when rendered with `<PrismicLink>`.\n */\nexport interface LinkProps {\n\t/**\n\t * The URL to link.\n\t */\n\thref: string;\n\n\t/**\n\t * The `target` attribute for anchor elements. If the Prismic field is\n\t * configured to open in a new window, this prop defaults to `_blank`.\n\t */\n\ttarget?: React.HTMLAttributeAnchorTarget;\n\n\t/**\n\t * The `rel` attribute for anchor elements. If the `target` prop is set to\n\t * `\"_blank\"`, this prop defaults to `\"noopener noreferrer\"`.\n\t */\n\trel?: string;\n\n\t/**\n\t * Children for the component. *\n\t */\n\tchildren?: React.ReactNode;\n}\n\nexport type PrismicLinkProps<\n\tInternalComponentProps = React.ComponentProps<typeof defaultComponent>,\n\tExternalComponentProps = React.ComponentProps<typeof defaultComponent>,\n> = Omit<InternalComponentProps & ExternalComponentProps, \"rel\" | \"href\"> & {\n\t/**\n\t * The `rel` attribute for the link. By default, `\"noreferrer\"` is provided if\n\t * the link's URL is external. This prop can be provided a function to use the\n\t * link's metadata to determine the `rel` value.\n\t */\n\trel?: string | AsLinkAttrsConfig[\"rel\"];\n\n\t/**\n\t * The Link Resolver used to resolve links.\n\t *\n\t * @remarks\n\t * If your app uses Route Resolvers when querying for your Prismic\n\t * repository's content, a Link Resolver does not need to be provided.\n\t * @see Learn about Link Resolvers and Route Resolvers {@link https://prismic.io/docs/core-concepts/link-resolver-route-resolver}\n\t */\n\tlinkResolver?: LinkResolverFunction;\n\n\t/**\n\t * The component rendered for internal URLs. Defaults to `<a>`.\n\t *\n\t * If your app uses a client-side router that requires a special Link\n\t * component, provide the Link component to this prop.\n\t */\n\tinternalComponent?: React.ElementType<InternalComponentProps>;\n\n\t/**\n\t * The component rendered for external URLs. Defaults to `<a>`.\n\t */\n\texternalComponent?: React.ComponentType<ExternalComponentProps>;\n} & (\n\t\t| {\n\t\t\t\tdocument: PrismicDocument | null | undefined;\n\t\t\t\thref?: never;\n\t\t\t\tfield?: never;\n\t\t  }\n\t\t| {\n\t\t\t\tfield: LinkField | null | undefined;\n\t\t\t\thref?: never;\n\t\t\t\tdocument?: never;\n\t\t  }\n\t\t| {\n\t\t\t\thref: LinkProps[\"href\"];\n\t\t\t\tfield?: LinkField | null | undefined;\n\t\t\t\tdocument?: never;\n\t\t  }\n\t);\n\nexport const PrismicLink = React.forwardRef(function PrismicLink<\n\tInternalComponentProps = React.ComponentProps<typeof defaultComponent>,\n\tExternalComponentProps = React.ComponentProps<typeof defaultComponent>,\n>(\n\t{\n\t\tfield,\n\t\tdocument: doc,\n\t\tlinkResolver,\n\t\tinternalComponent,\n\t\texternalComponent,\n\t\t...restProps\n\t}: PrismicLinkProps<InternalComponentProps, ExternalComponentProps>,\n\tref: React.ForwardedRef<Element>,\n): JSX.Element {\n\tif (\n\t\ttypeof process !== \"undefined\" &&\n\t\tprocess.env.NODE_ENV === \"development\"\n\t) {\n\t\tif (field) {\n\t\t\tif (!field.link_type) {\n\t\t\t\tconsole.error(\n\t\t\t\t\t`[PrismicLink] This \"field\" prop value caused an error to be thrown.\\n`,\n\t\t\t\t\tfield,\n\t\t\t\t);\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`[PrismicLink] The provided field is missing required properties to properly render a link. The link will not render. For more details, see ${devMsg(\n\t\t\t\t\t\t\"missing-link-properties\",\n\t\t\t\t\t)}`,\n\t\t\t\t);\n\t\t\t} else if (\n\t\t\t\tObject.keys(field).length > 1 &&\n\t\t\t\t!(\"url\" in field || \"uid\" in field || \"id\" in field)\n\t\t\t) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t`[PrismicLink] The provided field is missing required properties to properly render a link. The link may not render correctly. For more details, see ${devMsg(\n\t\t\t\t\t\t\"missing-link-properties\",\n\t\t\t\t\t)}`,\n\t\t\t\t\tfield,\n\t\t\t\t);\n\t\t\t}\n\t\t} else if (doc) {\n\t\t\tif (!(\"url\" in doc || \"id\" in doc)) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t`[PrismicLink] The provided document is missing required properties to properly render a link. The link may not render correctly. For more details, see ${devMsg(\n\t\t\t\t\t\t\"missing-link-properties\",\n\t\t\t\t\t)}`,\n\t\t\t\t\tdoc,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tconst {\n\t\thref: computedHref,\n\t\trel: computedRel,\n\t\t...attrs\n\t} = asLinkAttrs(field ?? doc, {\n\t\tlinkResolver,\n\t\trel: typeof restProps.rel === \"function\" ? restProps.rel : undefined,\n\t});\n\n\tlet rel: string | undefined = computedRel;\n\tif (\"rel\" in restProps && typeof restProps.rel !== \"function\") {\n\t\trel = restProps.rel;\n\t}\n\n\tconst href = (\"href\" in restProps ? restProps.href : computedHref) || \"\";\n\n\tconst InternalComponent = (internalComponent ||\n\t\tdefaultComponent) as React.ComponentType<LinkProps>;\n\tconst ExternalComponent = (externalComponent ||\n\t\tdefaultComponent) as React.ComponentType<LinkProps>;\n\tconst Component =\n\t\thref && isInternalURL(href) ? InternalComponent : ExternalComponent;\n\n\treturn (\n\t\t<Component ref={ref} {...attrs} {...restProps} href={href} rel={rel} />\n\t);\n}) as <\n\tInternalComponentProps = React.ComponentProps<typeof defaultComponent>,\n\tExternalComponentProps = React.ComponentProps<typeof defaultComponent>,\n>(\n\tprops: PrismicLinkProps<InternalComponentProps, ExternalComponentProps> & {\n\t\tref?: React.ForwardedRef<Element>;\n\t},\n) => JSX.Element;\n"],"mappings":";;;;;;;;;;AAeO,IAAMA,gBAAA,GAAmB;AAgFzB,IAAMC,WAAA,GAAcC,KAAA,CAAMC,UAAA,CAAW,SAASC,aAAAC,IAAA,EAYpDC,GAAA,EAAgC;EAAA,IAP/BC,KAAA,GAAAF,IAAA,CAAAE,KAAA;IACUC,GAAA,GAAAH,IAAA,CAAVI,QAAA;IACAC,YAAA,GAAAL,IAAA,CAAAK,YAAA;IACAC,iBAAA,GAAAN,IAAA,CAAAM,iBAAA;IACAC,iBAAA,GAAAP,IAAA,CAAAO,iBAAA;IACGC,SAAA,GAAAC,wBAAA,CAAAT,IAAA,EAAAU,SAAA;EAIJ,IACC,OAAOC,OAAA,KAAY,eACnBA,OAAA,CAAQC,GAAA,CAAIC,QAAA,KAAa,eACxB;IACD,IAAIX,KAAA,EAAO;MACN,KAACA,KAAA,CAAMY,SAAA,EAAW;QACrBC,OAAA,CAAQC,KAAA,4EAEPd,KAAK;QAEN,MAAM,IAAIe,KAAA,+IAAAC,MAAA,CACqIC,MAAA,CAC7I,yBAAyB,EACvB;MAGJ,WAAAC,MAAA,CAAOC,IAAA,CAAKnB,KAAK,EAAEoB,MAAA,GAAS,KAC5B,EAAE,SAASpB,KAAA,IAAS,SAASA,KAAA,IAAS,QAAQA,KAAA,GAC7C;QACDa,OAAA,CAAQQ,IAAA,wJAAAL,MAAA,CACgJC,MAAA,CACtJ,yBAAyB,IAE1BjB,KAAK;MAEN;IAAA,WACSC,GAAA,EAAK;MACf,IAAI,EAAE,SAASA,GAAA,IAAO,QAAQA,GAAA,GAAM;QACnCY,OAAA,CAAQQ,IAAA,2JAAAL,MAAA,CACmJC,MAAA,CACzJ,yBAAyB,IAE1BhB,GAAG;MAEJ;IACD;EACD;EAEK,IAAAqB,YAAA,GAIFC,WAAA,CAAYvB,KAAA,aAAAA,KAAA,cAAAA,KAAA,GAASC,GAAA,EAAK;MAC7BE,YAAA,EAAAA,YAAA;MACAqB,GAAA,EAAK,OAAOlB,SAAA,CAAUkB,GAAA,KAAQ,aAAalB,SAAA,CAAUkB,GAAA,GAAM;IAAA,CAC3D;IANMC,YAAA,GAAAH,YAAA,CAANI,IAAA;IACKC,WAAA,GAAAL,YAAA,CAALE,GAAA;IACGI,KAAA,GAAArB,wBAAA,CAAAe,YAAA,EAAAO,UAAA;EAMJ,IAAIL,GAAA,GAA0BG,WAAA;EAC9B,IAAI,SAASrB,SAAA,IAAa,OAAOA,SAAA,CAAUkB,GAAA,KAAQ,YAAY;IAC9DA,GAAA,GAAMlB,SAAA,CAAUkB,GAAA;EAChB;EAED,IAAME,IAAA,IAAQ,UAAUpB,SAAA,GAAYA,SAAA,CAAUoB,IAAA,GAAOD,YAAA,KAAiB;EAEtE,IAAMK,iBAAA,GAAqB1B,iBAAA,IAC1BX,gBAAA;EACD,IAAMsC,iBAAA,GAAqB1B,iBAAA,IAC1BZ,gBAAA;EACD,IAAMuC,SAAA,GACLN,IAAA,IAAQO,aAAA,CAAcP,IAAI,IAAII,iBAAA,GAAoBC,iBAAA;EAGlD,sBAAAG,GAAA,CAACF,SAAA,EAAAG,aAAA,CAAAA,aAAA,CAAAA,aAAA;IAAUpC,GAAA,EAAAA;EAAA,GAAc6B,KAAA,GAAWtB,SAAA;IAAWoB,IAAA,EAAAA,IAAA;IAAYF,GAAA,EAAAA;EAAA,EAAS;AAEtE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}