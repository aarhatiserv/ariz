{"ast":null,"code":"import { PrismicError } from \"./errors/PrismicError.js\";\nimport { isRepositoryName } from \"./isRepositoryName.js\";\nvar getToolbarSrc = function getToolbarSrc(repositoryName) {\n  if (isRepositoryName(repositoryName)) {\n    return \"https://static.cdn.prismic.io/prismic.js?new=true&repo=\".concat(repositoryName);\n  } else {\n    throw new PrismicError(\"An invalid Prismic repository name was given: \".concat(repositoryName), void 0, void 0);\n  }\n};\nexport { getToolbarSrc };","map":{"version":3,"names":["getToolbarSrc","repositoryName","isRepositoryName","concat","PrismicError"],"sources":["E:\\Aarhat Iserv - E-commerce\\new\\ariz\\Frontend\\node_modules\\@prismicio\\react\\node_modules\\@prismicio\\client\\dist\\getToolbarSrc.js"],"sourcesContent":["import { PrismicError } from \"./errors/PrismicError.js\";\nimport { isRepositoryName } from \"./isRepositoryName.js\";\nconst getToolbarSrc = (repositoryName) => {\n  if (isRepositoryName(repositoryName)) {\n    return `https://static.cdn.prismic.io/prismic.js?new=true&repo=${repositoryName}`;\n  } else {\n    throw new PrismicError(`An invalid Prismic repository name was given: ${repositoryName}`, void 0, void 0);\n  }\n};\nexport {\n  getToolbarSrc\n};\n//# sourceMappingURL=getToolbarSrc.js.map\n"],"mappings":";;AAEK,IAACA,aAAA,GAAgB,SAAhBA,cAAiBC,cAAA,EAAmB;EACxC,IAAIC,gBAAA,CAAiBD,cAAc,GAAG;IACpC,iEAAAE,MAAA,CAAiEF,cAAA;EACrE,OAAS;IACL,MAAM,IAAIG,YAAA,kDAAAD,MAAA,CAA8DF,cAAA,GAAkB,QAAQ,MAAM;EACzG;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}