{"ast":null,"code":"import { buildURL, buildPixelDensitySrcSet } from \"imgix-url-builder\";\nimport { imageThumbnail } from \"./isFilled.js\";\nconst DEFAULT_PIXEL_DENSITIES = [1, 2, 3];\nconst asImagePixelDensitySrcSet = function (field) {\n  let config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (field && imageThumbnail(field)) {\n    const {\n      pixelDensities = DEFAULT_PIXEL_DENSITIES,\n      ...imgixParams\n    } = config;\n    return {\n      src: buildURL(field.url, imgixParams),\n      srcset: buildPixelDensitySrcSet(field.url, {\n        ...imgixParams,\n        pixelDensities\n      })\n    };\n  } else {\n    return null;\n  }\n};\nexport { asImagePixelDensitySrcSet };","map":{"version":3,"names":["DEFAULT_PIXEL_DENSITIES","asImagePixelDensitySrcSet","field","config","arguments","length","undefined","imageThumbnail","pixelDensities","imgixParams","src","buildURL","url","srcset","buildPixelDensitySrcSet"],"sources":["E:\\Aarhat Iserv - E-commerce\\new\\ariz\\Frontend\\node_modules\\@prismicio\\src\\helpers\\asImagePixelDensitySrcSet.ts"],"sourcesContent":["import {\n\tBuildPixelDensitySrcSetParams,\n\tbuildPixelDensitySrcSet,\n\tbuildURL,\n} from \"imgix-url-builder\";\n\nimport type { ImageFieldImage } from \"../types/value/image\";\n\nimport { imageThumbnail as isImageThumbnailFilled } from \"./isFilled\";\n\n/**\n * The default pixel densities used to generate a `srcset` value.\n */\nconst DEFAULT_PIXEL_DENSITIES = [1, 2, 3];\n\n/**\n * Configuration for `asImagePixelDensitySrcSet()`.\n */\ntype AsImagePixelDensitySrcSetConfig = Omit<\n\tBuildPixelDensitySrcSetParams,\n\t\"pixelDensities\"\n> &\n\tPartial<Pick<BuildPixelDensitySrcSetParams, \"pixelDensities\">>;\n\n/**\n * The return type of `asImagePixelDensitySrcSet()`.\n */\ntype AsImagePixelDensitySrcSetReturnType<\n\tField extends ImageFieldImage | null | undefined,\n> = Field extends ImageFieldImage<\"filled\">\n\t? {\n\t\t\t/**\n\t\t\t * The image field's image URL with Imgix URL parameters (if given).\n\t\t\t */\n\t\t\tsrc: string;\n\n\t\t\t/**\n\t\t\t * A pixel-densitye-based `srcset` attribute value for the image field's\n\t\t\t * image with Imgix URL parameters (if given).\n\t\t\t */\n\t\t\tsrcset: string;\n\t  }\n\t: null;\n\n/**\n * Creates a pixel-density-based `srcset` from an image field with optional\n * image transformations (via Imgix URL parameters).\n *\n * If a `pixelDensities` parameter is not given, the following pixel densities\n * will be used by default: 1, 2, 3.\n *\n * @example\n *\n * ```ts\n * const srcset = asImagePixelDensitySrcSet(document.data.imageField, {\n * \tpixelDensities: [1, 2],\n * \tsat: -100,\n * });\n * // => {\n * //   src:    'https://images.prismic.io/repo/image.png?sat=-100',\n * //   srcset: 'https://images.prismic.io/repo/image.png?sat=-100&dpr=1 1x, ' +\n * //           'https://images.prismic.io/repo/image.png?sat=-100&dpr=2 2x'\n * // }\n * ```\n *\n * @param field - Image field (or one of its responsive views) from which to get\n *   an image URL.\n * @param config - An object of Imgix URL API parameters. The `pixelDensities`\n *   parameter defines the resulting `srcset` widths.\n *\n * @returns A `srcset` attribute value for the image field with Imgix URL\n *   parameters (if given). If the image field is empty, `null` is returned.\n * @see Imgix URL parameters reference: https://docs.imgix.com/apis/rendering\n */\nexport const asImagePixelDensitySrcSet = <\n\tField extends ImageFieldImage | null | undefined,\n>(\n\tfield: Field,\n\tconfig: AsImagePixelDensitySrcSetConfig = {},\n): AsImagePixelDensitySrcSetReturnType<Field> => {\n\tif (field && isImageThumbnailFilled(field)) {\n\t\t// We are using destructuring to omit `pixelDensities` from the\n\t\t// object we will pass to `buildURL()`.\n\t\tconst { pixelDensities = DEFAULT_PIXEL_DENSITIES, ...imgixParams } = config;\n\n\t\treturn {\n\t\t\tsrc: buildURL(field.url, imgixParams),\n\t\t\tsrcset: buildPixelDensitySrcSet(field.url, {\n\t\t\t\t...imgixParams,\n\t\t\t\tpixelDensities,\n\t\t\t}),\n\t\t} as AsImagePixelDensitySrcSetReturnType<Field>;\n\t} else {\n\t\treturn null as AsImagePixelDensitySrcSetReturnType<Field>;\n\t}\n};\n"],"mappings":";;AAaA,MAAMA,uBAAA,GAA0B,CAAC,GAAG,GAAG,CAAC;AA6DjC,MAAMC,yBAAA,GAA4B,SAAAA,CAGxCC,KAAA,EAE+C;EAAA,IAD/CC,MAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAA0C;EAEtC,IAAAF,KAAA,IAASK,cAAA,CAAuBL,KAAK,GAAG;IAG3C,MAAM;MAAEM,cAAA,GAAiBR,uBAAA;MAAyB,GAAGS;IAAA,IAAgBN,MAAA;IAE9D;MACNO,GAAA,EAAKC,QAAA,CAAST,KAAA,CAAMU,GAAA,EAAKH,WAAW;MACpCI,MAAA,EAAQC,uBAAA,CAAwBZ,KAAA,CAAMU,GAAA,EAAK;QAC1C,GAAGH,WAAA;QACHD;MAAA,CACA;IAAA;EAAA,OAEI;IACC;EACP;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}