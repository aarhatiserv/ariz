{"ast":null,"code":"import { preview } from \"../cookie.js\";\nconst readValue = value => {\n  return value.replace(/%3B/g, \";\");\n};\nconst getPreviewCookie = cookieJar => {\n  const cookies = cookieJar.split(\"; \");\n  let value;\n  for (const cookie of cookies) {\n    const parts = cookie.split(\"=\");\n    const name = readValue(parts[0]).replace(/%3D/g, \"=\");\n    if (name === preview) {\n      value = readValue(parts.slice(1).join(\"=\"));\n      break;\n    }\n  }\n  return value;\n};\nexport { getPreviewCookie };","map":{"version":3,"names":["readValue","value","replace","getPreviewCookie","cookieJar","cookies","split","cookie","parts","name","preview","slice","join"],"sources":["E:\\Aarhat Iserv - E-commerce\\new\\ariz-garments-mern\\ariz\\Frontend\\node_modules\\@prismicio\\src\\lib\\getPreviewCookie.ts"],"sourcesContent":["import { preview as previewCookieName } from \"../cookie\";\n\nconst readValue = (value: string): string => {\n\treturn value.replace(/%3B/g, \";\");\n};\n\n/**\n * Returns the value of a cookie from a given cookie store.\n *\n * @param cookieJar - The stringified cookie store from which to read the\n *   cookie.\n *\n * @returns The value of the cookie, if it exists.\n */\nexport const getPreviewCookie = (cookieJar: string): string | undefined => {\n\tconst cookies = cookieJar.split(\"; \");\n\n\tlet value: string | undefined;\n\n\tfor (const cookie of cookies) {\n\t\tconst parts = cookie.split(\"=\");\n\t\tconst name = readValue(parts[0]).replace(/%3D/g, \"=\");\n\n\t\tif (name === previewCookieName) {\n\t\t\tvalue = readValue(parts.slice(1).join(\"=\"));\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn value;\n};\n"],"mappings":";AAEA,MAAMA,SAAA,GAAaC,KAAA,IAAyB;EACpC,OAAAA,KAAA,CAAMC,OAAA,CAAQ,QAAQ,GAAG;AACjC;AAUa,MAAAC,gBAAA,GAAoBC,SAAA,IAAyC;EACnE,MAAAC,OAAA,GAAUD,SAAA,CAAUE,KAAA,CAAM,IAAI;EAEhC,IAAAL,KAAA;EAEJ,WAAWM,MAAA,IAAUF,OAAA,EAAS;IACvB,MAAAG,KAAA,GAAQD,MAAA,CAAOD,KAAA,CAAM,GAAG;IACxB,MAAAG,IAAA,GAAOT,SAAA,CAAUQ,KAAA,CAAM,CAAC,CAAC,EAAEN,OAAA,CAAQ,QAAQ,GAAG;IAEpD,IAAIO,IAAA,KAASC,OAAA,EAAmB;MAC/BT,KAAA,GAAQD,SAAA,CAAUQ,KAAA,CAAMG,KAAA,CAAM,CAAC,EAAEC,IAAA,CAAK,GAAG,CAAC;MAC1C;IACA;EACD;EAEM,OAAAX,KAAA;AACR"},"metadata":{},"sourceType":"module","externalDependencies":[]}