{"ast":null,"code":"import _objectSpread from \"E:/Aarhat Iserv - E-commerce/new/ariz/Frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"E:/Aarhat Iserv - E-commerce/new/ariz/Frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"pixelDensities\"],\n  _excluded2 = [\"widths\"];\nvar camelCaseToParamCase = function camelCaseToParamCase(input) {\n  return input.replace(/[A-Z]/g, function (match) {\n    return \"-\".concat(match.toLowerCase());\n  });\n};\nvar buildURL = function buildURL(url, params) {\n  var instance = new URL(url);\n  for (var camelCasedParamKey in params) {\n    var paramKey = camelCaseToParamCase(camelCasedParamKey);\n    var paramValue = params[camelCasedParamKey];\n    if (paramValue === void 0) {\n      instance.searchParams.delete(paramKey);\n    } else if (Array.isArray(paramValue)) {\n      instance.searchParams.set(paramKey, paramValue.join(\",\"));\n    } else {\n      instance.searchParams.set(paramKey, \"\".concat(paramValue));\n    }\n  }\n  var s = instance.searchParams.get(\"s\");\n  if (s) {\n    instance.searchParams.delete(\"s\");\n    instance.searchParams.append(\"s\", s);\n  }\n  return instance.toString();\n};\nvar buildPixelDensitySrcSet = function buildPixelDensitySrcSet(url, _ref) {\n  var pixelDensities = _ref.pixelDensities,\n    params = _objectWithoutProperties(_ref, _excluded);\n  return pixelDensities.map(function (dpr) {\n    return \"\".concat(buildURL(url, _objectSpread(_objectSpread({}, params), {}, {\n      dpr: dpr\n    })), \" \").concat(dpr, \"x\");\n  }).join(\", \");\n};\nvar buildWidthSrcSet = function buildWidthSrcSet(url, _ref2) {\n  var widths = _ref2.widths,\n    params = _objectWithoutProperties(_ref2, _excluded2);\n  return widths.map(function (width) {\n    return \"\".concat(buildURL(url, _objectSpread(_objectSpread({}, params), {}, {\n      w: void 0,\n      width: width\n    })), \" \").concat(width, \"w\");\n  }).join(\", \");\n};\nexport { buildPixelDensitySrcSet, buildURL, buildWidthSrcSet };","map":{"version":3,"names":["camelCaseToParamCase","input","replace","match","concat","toLowerCase","buildURL","url","params","instance","URL","camelCasedParamKey","paramKey","paramValue","searchParams","delete","Array","isArray","set","join","s","get","append","toString","buildPixelDensitySrcSet","_ref","pixelDensities","_objectWithoutProperties","_excluded","map","dpr","_objectSpread","buildWidthSrcSet","_ref2","widths","_excluded2","width","w"],"sources":["E:\\Aarhat Iserv - E-commerce\\new\\ariz\\Frontend\\node_modules\\@prismicio\\react\\node_modules\\imgix-url-builder\\dist\\index.mjs"],"sourcesContent":["const camelCaseToParamCase = (input) => {\n  return input.replace(/[A-Z]/g, (match) => {\n    return `-${match.toLowerCase()}`;\n  });\n};\nconst buildURL = (url, params) => {\n  const instance = new URL(url);\n  for (const camelCasedParamKey in params) {\n    const paramKey = camelCaseToParamCase(camelCasedParamKey);\n    const paramValue = params[camelCasedParamKey];\n    if (paramValue === void 0) {\n      instance.searchParams.delete(paramKey);\n    } else if (Array.isArray(paramValue)) {\n      instance.searchParams.set(paramKey, paramValue.join(\",\"));\n    } else {\n      instance.searchParams.set(paramKey, `${paramValue}`);\n    }\n  }\n  const s = instance.searchParams.get(\"s\");\n  if (s) {\n    instance.searchParams.delete(\"s\");\n    instance.searchParams.append(\"s\", s);\n  }\n  return instance.toString();\n};\n\nconst buildPixelDensitySrcSet = (url, { pixelDensities, ...params }) => {\n  return pixelDensities.map((dpr) => {\n    return `${buildURL(url, { ...params, dpr })} ${dpr}x`;\n  }).join(\", \");\n};\n\nconst buildWidthSrcSet = (url, { widths, ...params }) => {\n  return widths.map((width) => {\n    return `${buildURL(url, { ...params, w: void 0, width })} ${width}w`;\n  }).join(\", \");\n};\n\nclass Client {\n  constructor(options) {\n    this.baseURL = options.baseURL;\n  }\n  buildURLForPath(path, params = {}) {\n    return buildURL(`${new URL(path, this.baseURL)}`, params);\n  }\n  buildWidthSrcSetForPath(path, params) {\n    return buildWidthSrcSet(`${new URL(path, this.baseURL)}`, params);\n  }\n  buildPixelDensitySrcSetForPath(path, params) {\n    return buildPixelDensitySrcSet(`${new URL(path, this.baseURL)}`, params);\n  }\n}\n\nexport { Client, buildPixelDensitySrcSet, buildURL, buildWidthSrcSet };\n//# sourceMappingURL=index.mjs.map\n"],"mappings":";;;;AAAA,IAAMA,oBAAA,GAAuB,SAAvBA,qBAAwBC,KAAA,EAAU;EACtC,OAAOA,KAAA,CAAMC,OAAA,CAAQ,UAAU,UAACC,KAAA,EAAU;IACxC,WAAAC,MAAA,CAAWD,KAAA,CAAME,WAAA,CAAW;EAChC,CAAG;AACH;AACK,IAACC,QAAA,GAAW,SAAXA,SAAYC,GAAA,EAAKC,MAAA,EAAW;EAChC,IAAMC,QAAA,GAAW,IAAIC,GAAA,CAAIH,GAAG;EAC5B,SAAWI,kBAAA,IAAsBH,MAAA,EAAQ;IACvC,IAAMI,QAAA,GAAWZ,oBAAA,CAAqBW,kBAAkB;IACxD,IAAME,UAAA,GAAaL,MAAA,CAAOG,kBAAkB;IAC5C,IAAIE,UAAA,KAAe,QAAQ;MACzBJ,QAAA,CAASK,YAAA,CAAaC,MAAA,CAAOH,QAAQ;IACtC,WAAUI,KAAA,CAAMC,OAAA,CAAQJ,UAAU,GAAG;MACpCJ,QAAA,CAASK,YAAA,CAAaI,GAAA,CAAIN,QAAA,EAAUC,UAAA,CAAWM,IAAA,CAAK,GAAG,CAAC;IAC9D,OAAW;MACLV,QAAA,CAASK,YAAA,CAAaI,GAAA,CAAIN,QAAA,KAAAR,MAAA,CAAaS,UAAA,CAAY;IACpD;EACF;EACD,IAAMO,CAAA,GAAIX,QAAA,CAASK,YAAA,CAAaO,GAAA,CAAI,GAAG;EACvC,IAAID,CAAA,EAAG;IACLX,QAAA,CAASK,YAAA,CAAaC,MAAA,CAAO,GAAG;IAChCN,QAAA,CAASK,YAAA,CAAaQ,MAAA,CAAO,KAAKF,CAAC;EACpC;EACD,OAAOX,QAAA,CAASc,QAAA;AAClB;AAEK,IAACC,uBAAA,GAA0B,SAA1BA,wBAA2BjB,GAAA,EAAAkB,IAAA,EAAuC;EAAA,IAAhCC,cAAA,GAAAD,IAAA,CAAAC,cAAA;IAAmBlB,MAAA,GAAAmB,wBAAA,CAAAF,IAAA,EAAAG,SAAA;EACzD,OAAOF,cAAA,CAAeG,GAAA,CAAI,UAACC,GAAA,EAAQ;IACjC,UAAA1B,MAAA,CAAUE,QAAA,CAASC,GAAA,EAAAwB,aAAA,CAAAA,aAAA,KAAUvB,MAAA;MAAQsB,GAAA,EAAAA;IAAA,EAAK,QAAA1B,MAAA,CAAK0B,GAAA;EACnD,CAAG,EAAEX,IAAA,CAAK,IAAI;AACd;AAEK,IAACa,gBAAA,GAAmB,SAAnBA,iBAAoBzB,GAAA,EAAA0B,KAAA,EAA+B;EAAA,IAAxBC,MAAA,GAAAD,KAAA,CAAAC,MAAA;IAAW1B,MAAA,GAAAmB,wBAAA,CAAAM,KAAA,EAAAE,UAAA;EAC1C,OAAOD,MAAA,CAAOL,GAAA,CAAI,UAACO,KAAA,EAAU;IAC3B,UAAAhC,MAAA,CAAUE,QAAA,CAASC,GAAA,EAAAwB,aAAA,CAAAA,aAAA,KAAUvB,MAAA;MAAQ6B,CAAA,EAAG;MAAQD,KAAA,EAAAA;IAAA,EAAO,QAAAhC,MAAA,CAAKgC,KAAA;EAChE,CAAG,EAAEjB,IAAA,CAAK,IAAI;AACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}