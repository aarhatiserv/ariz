{"ast":null,"code":"import { asText as asText$1 } from \"@prismicio/richtext\";\nconst asText = function (richTextField) {\n  if (richTextField) {\n    for (var _len = arguments.length, configObjectOrTuple = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      configObjectOrTuple[_key - 1] = arguments[_key];\n    }\n    const [configObjectOrSeparator] = configObjectOrTuple;\n    let config;\n    if (typeof configObjectOrSeparator === \"string\") {\n      config = {\n        separator: configObjectOrSeparator\n      };\n    } else {\n      config = {\n        ...configObjectOrSeparator\n      };\n    }\n    return asText$1(richTextField, config.separator);\n  } else {\n    return null;\n  }\n};\nexport { asText };","map":{"version":3,"names":["asText","richTextField","_len","arguments","length","configObjectOrTuple","Array","_key","configObjectOrSeparator","config","separator","asText$1"],"sources":["E:\\Aarhat Iserv - E-commerce\\new\\ariz-garments-mern\\ariz\\Frontend\\node_modules\\@prismicio\\react\\node_modules\\@prismicio\\client\\dist\\helpers\\asText.js"],"sourcesContent":["import { asText as asText$1 } from \"@prismicio/richtext\";\nconst asText = (richTextField, ...configObjectOrTuple) => {\n  if (richTextField) {\n    const [configObjectOrSeparator] = configObjectOrTuple;\n    let config;\n    if (typeof configObjectOrSeparator === \"string\") {\n      config = {\n        separator: configObjectOrSeparator\n      };\n    } else {\n      config = { ...configObjectOrSeparator };\n    }\n    return asText$1(richTextField, config.separator);\n  } else {\n    return null;\n  }\n};\nexport {\n  asText\n};\n//# sourceMappingURL=asText.js.map\n"],"mappings":";AACK,MAACA,MAAA,GAAS,SAAAA,CAACC,aAAA,EAA0C;EACxD,IAAIA,aAAA,EAAe;IAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EADaC,mBAAA,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAAAF,mBAAA,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;IAAA;IAE9B,MAAM,CAACC,uBAAuB,IAAIH,mBAAA;IAClC,IAAII,MAAA;IACJ,IAAI,OAAOD,uBAAA,KAA4B,UAAU;MAC/CC,MAAA,GAAS;QACPC,SAAA,EAAWF;MACnB;IACA,OAAW;MACLC,MAAA,GAAS;QAAE,GAAGD;MAAA;IACf;IACD,OAAOG,QAAA,CAASV,aAAA,EAAeQ,MAAA,CAAOC,SAAS;EACnD,OAAS;IACL,OAAO;EACR;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}